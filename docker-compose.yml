version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: message_service_db
    environment:
      POSTGRES_DB: messagedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - message-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./MessageService.Api
      dockerfile: Dockerfile
    container_name: message_service_api
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=messagedb;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - message-network

  frontend:
    build:
      context: ./message-service-client
      dockerfile: Dockerfile
    container_name: message_service_client
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_WEBSOCKET_URL=ws://localhost:5000
    depends_on:
      - backend
    networks:
      - message-network

networks:
  message-network:
    driver: bridge

volumes:
  postgres_data: